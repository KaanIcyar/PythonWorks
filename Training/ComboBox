
"""
import sys
import os
from PyQt5.QtWidgets import QWidget,QApplication,QTextEdit,QLabel,QPushButton,QVBoxLayout,QFileDialog,QHBoxLayout,QLineEdit
from PyQt5.QtWidgets import QAction,qApp,QMainWindow, QComboBox



class Arayuz():
    def __init__(self):
        super().__init__(*args, **kwargs)
        self.init_ui()

    def init_ui(self, *args, **kwargs):
        self.button = QPushButton("Select")
        self.button.clicked.connect(self.on_clicled)
        
        self.text = QLineEdit()
        self.current_text = None     

        self.combo = QComboBox(self)
        
        self.combo.addItems(["Select one...", "Apple", "Orange", "Banana"])
        self.combo.currentTextChanged.connect(self.on_combobox_func) 
        
        v_box = QVBoxLayout()
        v_box.addWidget(self.button)
        v_box.addStrecth()
        v_box.addWidget(self.combo)

        h_box = QHBoxLayout()
        h_box.addLayout(v_box)
        h_box.addWidget(text)
        



        self.setLayout(h_box)
        print(self.combo.currentText())


    def on_combobox_func(self, text):                                                    
        self.current_text  = text 
        
    def on_clicled(self):                                                                
        if self.current_text == "Apple":
            print("APPLE IS RED")
            self.lineEdit.setText("APPLE IS RED")
        elif self.current_text == "Orange":
            print("ORANGE IS ORANGE")
            self.lineEdit.setText("ORANGE IS ORANGE")    
        elif self.current_text == "Banana":
            print("BANANA IS YELLOW")
            self.lineEdit.setText("BANANA IS YELLOW")  
        else: self.lineEdit.setText("Select one...")             
        

if __name__ == '__main__':
    app = QApplication(sys.argv)
    demo = QWidget()
    demo.show()
    sys.exit(app.exec_())
        
"""

import sys
import os
from PyQt5.QtWidgets import QWidget,QApplication,QTextEdit,QLabel,QPushButton,QVBoxLayout,QFileDialog,QHBoxLayout,QLineEdit
from PyQt5.QtWidgets import QAction,qApp,QMainWindow, QComboBox




class Widget(QWidget):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.init_ui()
    def init_ui(self):

        self.button = QPushButton("Select")
        self.button.clicked.connect(self.on_clicled)                                     
        
        self.lineEdit = QLineEdit()
        self.yazialani = QTextEdit()
        self.current_text = None                                                         
        
        self.combo = QComboBox(self)
        self.combo.addItems(["Select one...", "Apple", "Orange", "Banana"])
        self.combo.currentTextChanged.connect(self.on_combobox_func)                     

        v_box = QVBoxLayout()
        v_box.addWidget(self.button)
        v_box.addWidget(self.combo)

        h_box = QHBoxLayout(self)
        h_box.addLayout(v_box)
        h_box.addWidget(self.yazialani)


    def on_combobox_func(self, text):                                                    
        self.current_text  = text 
        
    def on_clicled(self):                                                                
        if self.current_text == "Apple":
            print("APPLE IS RED")
            self.yazialani.setText("APPLE IS RED")
        elif self.current_text == "Orange":
            print("ORANGE IS ORANGE")
            self.yazialani.setText("ORANGE IS ORANGE")
        elif self.current_text == "Banana":
            print("BANANA IS YELLOW")
            self.yazialani.setText("BANANA IS YELLOW")
        else: self.yazialani.setText("Select one...")
        

if __name__ == '__main__':
    app = QApplication(sys.argv)
    demo = Widget()
    demo.show()
    sys.exit(app.exec_())

